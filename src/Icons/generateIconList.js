// eslint-disable-next-line @typescript-eslint/no-var-requires
const path = require("path");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const fs = require("fs");

const directoryPath = path.join(__dirname);

const processIcons = () => {
  fs.readdir(directoryPath, function (err, files) {
    console.log("Generating Icon files...");

    if (err) {
      return console.log("Unable to scan directory: " + err);
    }

    let iconImportList = [];
    let iconList = [];
    //let indexExportList = [
    //"// Do not edit, this file is auto-generated by /stories/generateIconList.js",
    //];

    const directories = files.filter((file) => !file.includes("."));
    directories.forEach(function (directory) {
      fs.readdir(directoryPath + "/" + directory, function (err, subdirectory) {
        subdirectory.forEach(function (file) {
          console.log(file);

          const iconName = file.substring(0, file.indexOf("."));
          const importString = `import { ReactComponent as ${directory}${iconName}Icon } from './${directory}/${file}';`;
          iconImportList.push(importString);
          iconList.push("  " + iconName + "Icon");
          //const indexString = `export { default as ${directory}${iconName} } from './${directory}/${iconName}';`;
          //indexExportList.push(indexString);
        });
      });
    });

    let fileContents = iconImportList.join("\n");
    fileContents += `\n\nexport const glyphs = [\n${iconList.join(
      ",\n"
    )}\n];\n`;
    fs.writeFile(__dirname + "/IconListsGenerated.ts", fileContents, (err) => {
      if (err) throw err;
    });

    //const indexFileContents = indexExportList.join("\n");
    //fs.writeFile(__dirname + "index.ts", indexFileContents + "\n", (err) => {
    //if (err) throw err;
    //});

    console.log("Done.");
  });
};
processIcons();
